---
# Install config_manager pip package inside the Luna2 virtualenv
- name: Install config_manager pip package
  ansible.builtin.pip:
    name: '{{config_manager_noarch_pip_repository}}/config-manager/{{ config_manager_wheel }}'
    virtualenv: '{{ trix_local }}/python' 
    extra_args: "--upgrade"

# Symlink '{{ trix_local }}/python/bin/trix-config-manager' to '/usr/bin/trix-config-manager'
- name: Symlink '{{ trix_local }}/python/bin/trix-config-manager' to '/usr/bin/trix-config-manager'
  ansible.builtin.file:
    src: '{{ trix_local }}/python/bin/trix-config-manager'
    dest: '{{ trix_local }}/sbin/trix-config-manager'
    state: link


# Add the managed block to the managed files
- block:
  - name: "Ensure comments about managed block is present in (existing) managed files (1)"
    lineinfile:
      path: "{{ item }}"
      line: "{{ scripts_managed_block_comment1 }}" 
      regex: "{{ scripts_managed_block_comment1 }}"
      state: present
    with_items: "{{ scripts_managed_files }}"
    when: item is file

  - name: "Ensure comments about managed block is present in (existing) managed files (2)"
    lineinfile:
      path: "{{ item }}"
      line: "{{ scripts_managed_block_comment2 }}" 
      regex: "{{ scripts_managed_block_comment2 }}"
      state: present
      insertafter: "{{ scripts_managed_block_comment1 }}"
    with_items: "{{ scripts_managed_files }}"
    when: item is file

  - name: "Ensure block start delimiter is present in (existing) managed files"
    lineinfile:
      path: "{{ item }}"
      line: "{{ scripts_managed_block_start_delimiter }}"
      regex: "{{ scripts_managed_block_start_delimiter }}"
      state: present
      insertafter: "{{ scripts_managed_block_comment2 }}"
    with_items: "{{ scripts_managed_files }}"
    when: item is file

  - name: "Ensure block end delimiter is present in (existing) managed files"
    lineinfile:
      path: "{{ item }}"
      line: "{{ scripts_managed_block_end_delimiter }}"
      regex: "{{ scripts_managed_block_end_delimiter }}"
      state: present
      insertafter: "{{ scripts_managed_block_start_delimiter }}"

    with_items: "{{ scripts_managed_files }}"
    when: item is file
