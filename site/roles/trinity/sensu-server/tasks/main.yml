---

- block:
  - name: Install Sensu Repo (CV) for rhel 8 and below
    yum_repository:
      name: CV-Sensu
      description: ClusterVision Sensu Repository
      baseurl: "{{ sensu_repo }}"
      gpgkey: "{{ sensu_gpg_key }}"

  # - name: Add GPG keys to RPM DB
  #   ansible.builtin.rpm_key:
  #     state: present
  #     key: "{{ sensu_gpg_key }}"

  when: ansible_facts['os_family'] == "RedHat" and ansible_facts['distribution_major_version']|int < 9

- name: Install Sensu Repo (CV) for rhel 9+
  yum_repository:
    name: CV-Sensu
    description: ClusterVision Sensu Repository
    baseurl: "{{ sensu_repo }}"
    gpgcheck: false
  when: ansible_facts['os_family'] == "RedHat" and ansible_facts['distribution_major_version']|int > 8

- name: Install redis
  yum:
    name: redis
    state: installed

- name: Ensure redis binds to localhost
  tags: redis
  lineinfile:
    dest: /etc/redis.conf
    regexp: '^bind'
    line: 'bind 127.0.0.1'
  when: ansible_facts['os_family'] == "RedHat" and ansible_facts['distribution_major_version']|int < 9

- name: Ensure redis binds to localhost
  tags: redis
  lineinfile:
    dest: /etc/redis/redis.conf
    regexp: '^bind'
    line: 'bind 127.0.0.1'
  when: ansible_facts['os_family'] == "RedHat" and ansible_facts['distribution_major_version']|int > 8

- name: Start redis
  systemd:
    name: redis
    state: started
    enabled: true

- name: Install Sensu and dashboarding
  yum:
    name: "{{ sensu_packages }}"
    state: installed
  vars:
    sensu_packages:
    - sensu
    - uchiwa

- name: Uchiwa template
  template:
    src: uchiwa.json
    dest: /etc/sensu/uchiwa.json
    owner: uchiwa
    group: uchiwa
    mode: '0664'
  notify: restart uchiwa

- name: Firewalld for sensu
  firewalld:
    port: "{{ item }}"
    state: enabled
    permanent: true
    immediate: true
  with_items:
  - 3001/tcp

- name: Get Sensu rexml/ruby version
  shell: "(/opt/sensu/embedded/bin/gem list --local|grep rexml|grep -oE '\\([0-9\\.]+\\)' || echo 0) | tr -d '(.)'"
  register: rexml_version

- name: Update Sensu rexml
  shell: "/opt/sensu/embedded/bin/gem install rexml -v 3.2.5"
  when: rexml_version.stdout|int < 325

- name: Verify if Ruby gem domain_name is installed
  shell: "/opt/sensu/embedded/bin/gem list --local|grep domain_name"
  register: domain_name_gem

- block:
  - name: Get Sensu ruby version
    shell: "(/opt/sensu/embedded/bin/ruby --version|grep -oE '[0-9\\.]+'|head -n1|grep -E '[0-9]' || echo 0)| tr -d '(.)'"
    register: ruby_version

  - name: Install Ruby gem domain_name
    shell: "/opt/sensu/embedded/bin/gem install domain_name -v 0.5.20190701"
    when: ruby_version.stdout|int < 270
  when: domain_name_gem.rc != 0

- name: Install Sensu plugins
  gem:
    executable: /opt/sensu/embedded/bin/gem
    state: "{{ item.state }}"
    name: "{{ item.name }}"
    version: "{{ item.version | default() }}"
    pre_release: "{{ item.pre_release | default('no') }}"
    repository: "{{ item.repository | default('') }}"
    user_install: false
  with_items: "{{ sensu_server_gems }}"

- name: Place mailer configuration
  template:
    src: mailer.erb
    dest: /etc/sensu/mailer.erb
    owner: sensu
    group: sensu
  notify:
   - restart sensu-server
   - restart sensu-api

- name: Place configuration files
  template:
    src: "{{ item }}"
    dest: "/etc/sensu/conf.d/{{ item }}"
    owner: sensu
    group: sensu
  notify:
   - restart sensu-server
   - restart sensu-api
  with_items:
    - mailer.json
    - handlers.json
    - rabbitmq.json
    - sensu-api.json
    - sensu-checks.json

- block:
  - name: Copy service files
    copy:
      src: 'uchiwa.service'
      dest: '/etc/systemd/system/uchiwa.service'

  - name: Reload systemd
    shell: "systemctl daemon-reload"
  when: ansible_facts['os_family'] == "RedHat" and ansible_facts['distribution_major_version']|int > 8

- name: Start sensu componenets
  systemd:
    name: "{{ item }}"
    state: started
    enabled: true
  with_items:
    - sensu-server
    - sensu-api
    - sensu-client
    - uchiwa

- name: Create Sensu JIT clients
  uri:
    url: "http://localhost:4567/clients"
    method: POST
    body: "{{ item | to_nice_json }}"
    body_format: json
    status_code: 201
  with_items:
  - "{{ sensu_jit_clients }}"
  when: sensu_jit_clients is defined

# it's not sure where port 4567 get opened. for now we close it manually.
- name: Firewalld close external for sensu
  firewalld:
    port: "{{ item }}"
    state: disabled
    permanent: true
    immediate: true
  with_items:
  - 4567/tcp
